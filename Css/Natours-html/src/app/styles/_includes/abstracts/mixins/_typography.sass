// TYPOGRAPHY
=text-wrap($width: 100%, $display: inline-block)
  display: $display
  max-width: $width
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap
  word-wrap: normal

// Clearfix
=clearfix
  *zoom: 1
  &:before, &:after
    content: " "
    display: table
  &:after
    clear: both
// Visually hidden
=visually-hidden
  margin: -1px
  padding: 0
  width: 1px
  height: 1px
  overflow: hidden
  clip: rect(0 0 0 0)
  clip: rect(0, 0, 0, 0)
  position: absolute

// Get Rem
=setrem($size)
  font-size: $size
  font-size: calculateRem($size)

// Fonts
=font-face($fontFamily: 'myFont', $path: "../fonts/", $name: "myFont")
  @font-face
    font-family: '#{$fontFamily}'
    src: url(#{$path+$name}.eot)
    src: url(#{$path+$name}.eot?#iefix) format('embedded-opentype'),
    url(#{$path+$name}.woff) format('woff'),
    url(#{$path+$name}.woff2) format('woff2'),
    url(#{$path+$name}.ttf) format('truetype'),
    url(#{$path+$name}.svg##{$fontFamily}) format('svg')
    font-weight: normal
    font-style: normal

// Set Center
=set-center()
  +transform(translateX(-50%) translateY(-50%))
  +pos(abs,50% null null 50%)

// Set Full Width
=vh
  min-width: 100vw
  min-height: 100vh

=full-width
  min-width: 100%
  min-height: 100%
  width: 100%
  height: 100%


// Set Padding
=fz ($fontsize:1rem)
  font-size: $fontsize

// Set Padding
=fw ($fontweight:400)
  font-weight: $fontweight

// Set Padding
=lh ($lineheight:0)
  line-height: $lineheight

/// Opacity
=opacity($opacity: 0.5)
  $opacityMultiplied: $opacity * 100
  filter: alpha(opacity = $opacityMultiplied)
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")"
  +bn-prefix("opacity", $opacity)

// Columns
=columns($count: 3, $gap: 10)
  +bn-prefix("column-count", $count)
  +bn-prefix("column-gap", $gap)

// Text shadow
=text-shadow($x: 2px 2px 5px rgba(0, 0, 0, 0.4))
  text-shadow: $x

// Box shadow
=box-shadow($x: 2px 2px 5px rgba(0, 0, 0, 0.4), $inset: null)
  @if $inset != ""
    +bn-prefix("box-shadow", $inset $x )
  @else
    +bn-prefix("box-shadow", $x)

=text-sha($x: 2px 2px 5px rgba(0, 0, 0, 0.4))
  text-shadow: $x

// Box shadow
=box-sha($x: 2px 2px 5px rgba(0, 0, 0, 0.4), $inset: null)
  @if $inset != ""
    +bn-prefix("box-shadow", $inset $x )
  @else
    +bn-prefix("box-shadow", $x)

/// Triple Borders
=triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0)
  border: 1px solid $colorOne
  +border-radius($radius)
  +bn-prefix("box-shadow", "0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}")

// Placeholder
=placeholder
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

// Selection
=selection
  &::selection
    @content
  &:-moz-selection
    @content
  &::-moz-selection
    @content
  &:-ms-selection
    @content
